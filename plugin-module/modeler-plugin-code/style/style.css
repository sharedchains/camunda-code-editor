@import './codemirror.css';
@import './material.css';
@import './show-hint.css';
@import './lint.css';
@import './dialog.css';
@import './react-reflex.css';

.editorModal {
    width: 95%;
    height: 80%;
}

#editorModalButtons {
    display: flex;
    justify-content: flex-end;
}

#editorModalButtons button {
    font-size: 16px;
    margin-left: 6px;
}

.editorForm {
    height: 100%;
}

#contextTitleRow{
    padding-right: 10px;
}

#vectorsVariablesNumber{
    margin-left: 10px;
    margin-right: 5px;
}

.code-editor-tooltip {
    background-color: #bfbfbf;
    padding: 1px 5px 1px 5px;
    border-radius: 14px;
    color: #ffffff;
    font-weight: bold;
    position: relative;
	margin-left: 5px;
	text-align: center;
}

.code-editor-tooltip::after {
	background-color: #333;
	border-radius: 10px;
	color: #ffffff;
	display: none;
	padding: 10px 15px;
	position: absolute;
	text-align: center;
	z-index: 999;
}

.code-editor-tooltip::before {
	background-color: #333;
	content: ' ';
	display: none;
	position: absolute;
	width: 15px;
	height: 15px;
	z-index: 999;
}

.code-editor-tooltip:hover::after {
	display: block;
}

.code-editor-tooltip:hover::before {
	display: block;
}

.code-editor-tooltip.bottom::after {
	bottom: 0;
	left: 50%;
	transform: translate(-50%, calc(100% + 10px));
}

.code-editor-tooltip.bottom::before {
	bottom: 0;
	left: 50%;
	transform: translate(-50%, calc(100% + 5px)) rotate(45deg);
}

#vectorsModeTooltip:after{
    content: 'This mode enables Boundary Testing execution';
}

#vectorModeVariablesNumber:after{
    content: 'Defines the size of input vectors';
}

.contextTitle {
    margin-top: 0;
}

.contextEditor .CodeMirror {
    height: 150px !important;
}

.modal-content, .modal-body {
    height: 100%;
}

.CodeMirror-hints, .CodeMirror-lint-tooltip, .CodeMirror-lint-message {
    z-index: 10000;
}

.CodeEditor-container {
    display: flex;
}

.reflex-container.vertical > .reflex-splitter {
    height: unset !important;
}

.reflex-container.vertical > .right-pane {
    overflow: inherit;
}

.RunningResult {
    height: 500px;
}

.RunningResult .Result-box {
    box-sizing: border-box;
    height: 95%;
    border: 2px solid #ccc;
    overflow-y: auto;
    padding: 5px;
}

div#runPanel {
    background-color: #263238;
    color: white;

    display: flex;
    flex-flow: row-reverse;
    justify-content: flex-start;

    height: auto;
}

div#runPanel > button {
    background-color: white;
    color: black;

    text-align: center;
    text-decoration: none;
    display: inline-block;

    padding: 5px 10px 5px 10px;

    align-self: flex-start;
    width: 75px;
}

div#runPanel > button.run-button {
    border: 2px solid #4CAF50;
}

div#runPanel > button.run-button:hover, div#runPanel > button.run-button:active {
    background-color: #4CAF50;
    color: white;
}

div#runPanel > button.stop-button {
    border: 2px solid #d24747;
}

div#runPanel > button.stop-button:hover, div#runPanel > button.stop-button:active {
    background-color: #d24747;
    color: white;
}

.CodeEditor .CodeMirror {
    height: 500px !important;
}

.code-editor-script-format input {
    padding-right: 56px !important;
}

.code-editor-script-format .clear {
    right: 24px !important;
}

.code-editor-script {
    right: 0;
    background: transparent !important;
    border: none !important;
    top: 0 !important;
}

.code-editor-script span {
    display: block !important;
    font-weight: bold;
}

.cm-matchhighlight {
    font-weight: bold;
    background-color: #80cbc433;
}

table.context-table {
    width: 30%;
}

table.context-table th.contextFieldTitle:first-letter {
    text-transform: capitalize;
}

table.context-table td {
    vertical-align: top;
    text-align: center;
}

table.context-table textarea {
    margin-top: 2px;
    padding: 1px 0;
}

table.context-table textarea.invalid, table.context-table input.invalid {
    border-color: #ff3d3d;
}

table.context-table p.validationError {
    margin-top: 5px;
    color: #ff3d3d;
    font-size: xx-small;
}
